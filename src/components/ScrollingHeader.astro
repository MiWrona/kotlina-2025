---
const { text } = Astro.props;
---

<script>
  window.addEventListener("scroll", () => {
    const scrollTop = window.scrollY;
    const track = document.querySelector(".scrolling-header-track");

    // Maksymalny i minimalny rozmiar tekstu (dopasuj do swoich potrzeb)
    const maxSize = 35.5;
    const minSize = 10;

    // Wartość scrolla, po której osiągamy minimum
    const maxScroll = 1000;

    // Oblicz skalę
    const newSize = Math.max(minSize, maxSize - (scrollTop / maxScroll) * (maxSize - minSize));

    track.style.fontSize = `${newSize}rem`;
  });
</script>



<div class="scrolling-header-bg-bottom">
    <div class="scrolling-header-track">
      <span>{text}•{text}•{text}•{text}•{text}•{text}•{text}•{text}</span>


    </div>
  </div>
  
  <style>
  .scrolling-header-bg-bottom {
    position: fixed;
    bottom: 5vh;
    left: 0;
    width: 100vw;
    z-index: -1;
    overflow: hidden;
    pointer-events: none;
    opacity: 0.10;
    z-index: 10;
  }
  
  .scrolling-header-track {
    display: flex;
    min-width: 200%;
    animation: scrollText 10s linear infinite;
    font-size: 35.5rem;
    color: #f4e9c3;
    font-family: "Raleway", sans-serif;
    font-weight: bold;
    letter-spacing: 3px;
    white-space: nowrap;
    will-change: font-size;
  }
  

  @media screen and (min-width: 636px) { 
    .scrolling-header-track {
    animation: scrollText 30s linear infinite;
  }
  }
  
  @keyframes scrollText {
    0% {
      transform: translateX(0%);
    }
    100% {
      transform: translateX(-50%);
    }
  }
  </style>
  

